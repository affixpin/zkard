export const zkModuleAbi = [
	{
		type: "constructor",
		inputs: [
			{ name: "bankAddress", type: "address", internalType: "address" },
			{ name: "verifierAddress", type: "address", internalType: "address" },
		],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "HOOK_TYPE",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "VALIDATOR_TYPE",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "accounts",
		inputs: [{ name: "account", type: "address", internalType: "address" }],
		outputs: [
			{ name: "isHookInstalled", type: "bool", internalType: "bool" },
			{ name: "isValidatorInstalled", type: "bool", internalType: "bool" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "addCollateral",
		inputs: [{ name: "collateralId", type: "uint8", internalType: "uint8" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "addCollateralProxy",
		inputs: [
			{ name: "proxyId", type: "uint8", internalType: "uint8" },
			{ name: "proxyAddress", type: "address", internalType: "address" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "clearTrustedForwarder",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "disableCollateralProxy",
		inputs: [{ name: "proxyId", type: "uint8", internalType: "uint8" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "enableCollateralProxy",
		inputs: [{ name: "proxyId", type: "uint8", internalType: "uint8" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "isCollateralEnabled",
		inputs: [
			{ name: "account", type: "address", internalType: "address" },
			{ name: "collateralId", type: "uint8", internalType: "uint8" },
		],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "isCollateralSupported",
		inputs: [{ name: "collateralId", type: "uint8", internalType: "uint8" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "isInitialized",
		inputs: [
			{ name: "smartAccount", type: "address", internalType: "address" },
		],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "isModuleType",
		inputs: [{ name: "typeID", type: "uint256", internalType: "uint256" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "isTrustedForwarder",
		inputs: [
			{ name: "forwarder", type: "address", internalType: "address" },
			{ name: "account", type: "address", internalType: "address" },
		],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "isValidSignatureWithSender",
		inputs: [
			{ name: "", type: "address", internalType: "address" },
			{ name: "", type: "bytes32", internalType: "bytes32" },
			{ name: "", type: "bytes", internalType: "bytes" },
		],
		outputs: [
			{ name: "sigValidationResult", type: "bytes4", internalType: "bytes4" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "name",
		inputs: [],
		outputs: [{ name: "", type: "string", internalType: "string" }],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "onInstall",
		inputs: [{ name: "callData", type: "bytes", internalType: "bytes" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "onUninstall",
		inputs: [{ name: "callData", type: "bytes", internalType: "bytes" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "owner",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "postCheck",
		inputs: [{ name: "hookData", type: "bytes", internalType: "bytes" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "preCheck",
		inputs: [
			{ name: "msgSender", type: "address", internalType: "address" },
			{ name: "msgValue", type: "uint256", internalType: "uint256" },
			{ name: "msgData", type: "bytes", internalType: "bytes" },
		],
		outputs: [{ name: "hookData", type: "bytes", internalType: "bytes" }],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "proxyIds",
		inputs: [
			{
				name: "possitionProxyAddress",
				type: "address",
				internalType: "address",
			},
		],
		outputs: [{ name: "proxyId", type: "uint8", internalType: "uint8" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "proxyInfo",
		inputs: [{ name: "proxyId", type: "uint8", internalType: "uint8" }],
		outputs: [
			{ name: "proxyAddress", type: "address", internalType: "address" },
			{ name: "proxyId", type: "uint8", internalType: "uint8" },
			{ name: "isEnabled", type: "bool", internalType: "bool" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "removeCollateral",
		inputs: [{ name: "collateralId", type: "uint8", internalType: "uint8" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "renounceOwnership",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setTrustedForwarder",
		inputs: [{ name: "forwarder", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setVerifier",
		inputs: [{ name: "_verifier", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "transferOwnership",
		inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "trustedForwarder",
		inputs: [{ name: "account", type: "address", internalType: "address" }],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "validateUserOp",
		inputs: [
			{
				name: "userOp",
				type: "tuple",
				internalType: "struct PackedUserOperation",
				components: [
					{ name: "sender", type: "address", internalType: "address" },
					{ name: "nonce", type: "uint256", internalType: "uint256" },
					{ name: "initCode", type: "bytes", internalType: "bytes" },
					{ name: "callData", type: "bytes", internalType: "bytes" },
					{
						name: "accountGasLimits",
						type: "bytes32",
						internalType: "bytes32",
					},
					{
						name: "preVerificationGas",
						type: "uint256",
						internalType: "uint256",
					},
					{ name: "gasFees", type: "bytes32", internalType: "bytes32" },
					{ name: "paymasterAndData", type: "bytes", internalType: "bytes" },
					{ name: "signature", type: "bytes", internalType: "bytes" },
				],
			},
			{ name: "userOpHash", type: "bytes32", internalType: "bytes32" },
		],
		outputs: [
			{
				name: "",
				type: "uint256",
				internalType: "ERC7579ValidatorBase.ValidationData",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "verifier",
		inputs: [],
		outputs: [
			{ name: "", type: "address", internalType: "contract IVerifier" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "version",
		inputs: [],
		outputs: [{ name: "", type: "string", internalType: "string" }],
		stateMutability: "pure",
	},
	{
		type: "event",
		name: "CollateralAdded",
		inputs: [
			{
				name: "account",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "collateralId",
				type: "uint8",
				indexed: true,
				internalType: "uint8",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "CollateralRemoved",
		inputs: [
			{
				name: "account",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "collateralId",
				type: "uint8",
				indexed: true,
				internalType: "uint8",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "ModuleInitialized",
		inputs: [
			{
				name: "account",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "ModuleUninitialized",
		inputs: [
			{
				name: "account",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "OwnershipTransferred",
		inputs: [
			{
				name: "previousOwner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "newOwner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "error",
		name: "AlreadyInitialized",
		inputs: [
			{ name: "smartAccount", type: "address", internalType: "address" },
		],
	},
	{ type: "error", name: "CollateralAlreadyEnabled", inputs: [] },
	{ type: "error", name: "CollateralNotEnabled", inputs: [] },
	{ type: "error", name: "HasCollaterals", inputs: [] },
	{ type: "error", name: "HookInvalidSelector", inputs: [] },
	{ type: "error", name: "InvalidCollateral", inputs: [] },
	{ type: "error", name: "LimitNotReached", inputs: [] },
	{ type: "error", name: "LiquidationAllowedByBankOnly", inputs: [] },
	{ type: "error", name: "ModuleIsInitialized", inputs: [] },
	{ type: "error", name: "ModuleIsNotInitialized", inputs: [] },
	{
		type: "error",
		name: "NotInitialized",
		inputs: [
			{ name: "smartAccount", type: "address", internalType: "address" },
		],
	},
	{ type: "error", name: "OnlyLiquidation", inputs: [] },
	{
		type: "error",
		name: "OwnableInvalidOwner",
		inputs: [{ name: "owner", type: "address", internalType: "address" }],
	},
	{
		type: "error",
		name: "OwnableUnauthorizedAccount",
		inputs: [{ name: "account", type: "address", internalType: "address" }],
	},
	{ type: "error", name: "ValidationNeeded", inputs: [] },
] as const;
